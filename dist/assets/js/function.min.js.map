{"version":3,"sources":["function.js"],"names":["pickEnglish","Array","pickGerman","document","getElementById","popUpSite","userLang","navigator","language","code","elt","charCodeAt","updateSiteLanguage","then","keys","forEach","transField","LOWER","pickLanguage","siteLanguage","placeHolders","b64","charAt","len","arr","startsWith","length","addEventListener","push","tmp","backDelay","loop","backSpeed","i","decode","strings","classList","num","element","requestFullscreen","extraBytes","uint8","mozRequestFullScreen","closePage","temp","exitFullscreen","output","encode","enterFullscreen"],"mappings":"mgBAMIA,WALJC,8CAMIC,EAAAA,IAAaC,WAASC,GADtBJ,EAAAA,IAAAA,WAAcG,GALlBE,EAAAA,IAAAF,WAAAC,uBAWIE,EAAWC,IAAUC,WAAYD,iBAArC,IAAAE,EAAAC,EAAAC,WAAA,iCAUMC,IAAAA,EACE,GADFA,EAAAA,GAGA,EAEDC,EAAKC,EAALD,GACQC,EAAAA,EAAaC,GAAAA,GAClBN,EAAIO,EAAAA,GAFPH,EAAAA,EAJHJ,EAAAQ,EAAA,GADFR,EAAAQ,EAAA,QASO,4CAQP,GAAqB,EAAfC,EAAAA,OAAe,EAArBC,MAAAA,IAAAA,MAAMD,kDAQHN,IAAAA,EAAAA,EAAAA,OARHQ,EAAA,MAAAC,EAAAC,OAAAC,EAAA,GAAA,EAAA,MAAAF,EAAAC,OAAAC,EAAA,GAAA,EAAA,EAYAC,EAAAlB,IAAAA,EAAA,EAAAmB,EAAAA,OAAA,EAAAL,GACAF,EAAA,EAAAA,EAAAG,EAAAK,OAAA,EAAAL,EAAAK,eAQAxB,SAAWyB,EAAAA,GACTT,EAAAA,KAAAA,EAGFlB,IAAY2B,EAAZ3B,EAAAA,EAAY2B,EAAAA,EAAZ3B,GAA6B,EAA7BA,GAAsC,EAAtCA,GAAAA,UACEkB,EAAAA,EAAaG,EAAbH,OAAAA,KAAAA,GAAAA,EAAAA,EAAAA,OAAAA,EAAAA,KAAAA,GAAAA,EAAAA,EAAAA,OAAAA,EAAAA,KAAAA,EAAAA,EAAAA,EAAAA,OAAAA,EAAAA,OADFlB,oBAMA4B,EAAA,IAAAC,UACqB,IAEnBC,EAEAC,EAAM,KADNC,EAAAA,EAHmBX,EAAAC,OAAAW,KAAA,EAAAC,EAAAb,EAAAC,OAAAW,EAAA,KAAA,IADrB,IAAAb,OACEe,EAAAA,EAAAA,EAAAA,OAAAA,KAAAA,GAAAA,EAAAA,EAAAA,OAAAA,EAAAA,KAAAA,EAAAA,EAAAA,EAAAA,OAAAA,EAAAA,KAAAA,WAOFP,EAAA,IAAAC,uBAKE1B,SAEUA,GACRA,IAFAA,EAKDA,EAAAA,IAJMA,EAEGA,EAAAA,OAAAA,EADRA,EAEAA,GANJE,SAAAA,EAAA+B,GACE,MA/EF,mEA+EEd,OAAAe,GAiBEC,IAAAA,EAAAA,EAAQC,EAAAA,EAAAA,OAARC,EAAAP,EAAAP,EAAAO,GAAA,EADFK,GAAAA,EAEOC,IAAAA,KAFPE,EAAAR,EAAA,IAAA,GAAAQ,EAAAR,EAAA,GACEK,QAEQI,0CAIRJ,OAAAA,GACDA,KAAAA,EAEDK,GAAAA,GADAC,EAAAH,EAAAA,EAAAf,OAAA,KACAiB,GACEE,GAAAA,EAAAA,GAAAA,EAAAA,IADFA,GAAAA,KACEA,MAXF,KAAA,EAgBFC,GAAAC,wCAAA,IACAC,GAAAA,EAAgB7C,GAAhB,EAAA","file":"function.min.js","sourcesContent":["/*jshint esversion: 9 */\r\n/* ########################################\r\n    ...\r\n*/\r\nimport Typed from 'typed.js';\n\nlet pickEnglish = document.getElementById(\"flagUK\");\nlet pickGerman = document.getElementById(\"flagDE\");\nlet closePage = document.getElementById(\"close\");\nlet popUpSite = document.getElementById(\"siteFullScreen\");\n\n\r\nlet userLang = navigator.language || navigator.userLanguage;\r\nlet siteLanguage = null;\r\n\r\n\r\n\r\n/**\r\n * Display the correct language which the user picked\r\n * @param  {[string]} lang [language code]\r\n * @return {[type]}      [null]\r\n */\r\nconst updateSiteLanguage = lang => {\r\n  fetch('./translations.json')\r\n    .then(function(response) {\r\n      return response.json();\r\n    })\r\n    .then(function(myJson) {\r\n      Object.keys(myJson).forEach(textField => {\r\n        let transField = document.getElementById(textField);\r\n        if(transField != null) transField.innerHTML = myJson[textField][lang];\r\n      });\r\n  });\r\n};\r\n\r\n/**\r\n * Change the users language\r\n * @param  {[string]} lang [language code]\r\n */\r\nconst pickLanguage = lang => {\r\n  siteLanguage = lang;\r\n  if(lang === \"de\") {\r\n    pickEnglish.classList.remove(\"picked\");\r\n    pickGerman.classList.add(\"picked\");\r\n  } else {\r\n    pickGerman.classList.remove(\"picked\");\r\n    pickEnglish.classList.add(\"picked\");\r\n  }\r\n  updateSiteLanguage(lang);\r\n};\r\n\r\n//Set sitelanguage to language of user\r\nif(userLang.startsWith(\"de-\")) {\r\n  pickLanguage(\"de\");\r\n} else {\r\n  pickLanguage(\"en\");\r\n}\r\n\r\n\r\n//Right-top language symbols to change the global language\r\npickGerman.addEventListener(\"click\", e => {\r\n  pickLanguage(\"de\");\r\n});\r\n\r\npickEnglish.addEventListener(\"click\", e => {\r\n  pickLanguage(\"en\");\r\n});\r\n\r\n\r\n//Title animation Typed.js\r\nconst TYPED = new Typed('#typed', {\r\n  strings: ['CODER', 'WEB DEVELOPER', 'ðŸ“·-grapher'],\r\n  typeSpeed: 110,\r\n  backDelay: 3000,\r\n  backSpeed: 40,\r\n  loop: true\r\n});\r\n\r\n/**\r\n * Leave fullscreen mode\r\n * @return {[type]} [null]\r\n */\r\nconst exitFullscreen = () => {\r\n  if(document.exitFullscreen) {\r\n    document.exitFullscreen();\r\n  } else if(document.mozCancelFullScreen) {\r\n    document.mozCancelFullScreen();\r\n  } else if(document.webkitExitFullscreen) {\r\n    document.webkitExitFullscreen();\r\n  }\r\n  popUpSite.classList.toggle(\"popUpSiteClose\");\r\n};\r\n\r\n/**\r\n * Go into fullscreen mode\r\n * @param  {[DOMElement]} element Element to show in fullscreen\r\n * @return {[type]}         [null]\r\n */\r\nconst enterFullscreen = (element) => {\r\n  if(element.requestFullscreen) {\r\n    element.requestFullscreen();\r\n  } else if(element.mozRequestFullScreen) {\r\n    element.mozRequestFullScreen();\r\n  } else if(element.msRequestFullscreen) {\r\n    element.msRequestFullscreen();\r\n  } else if(element.webkitRequestFullscreen) {\r\n    element.webkitRequestFullscreen();\r\n  }\r\n  //Add exit page functionality\r\n  closePage.addEventListener(\"click\", () => {\r\n    exitFullscreen();\r\n  });\r\n};\r\n\r\n\r\n//Show entire DOM\r\nenterFullscreen(document.body);\r\n"]}