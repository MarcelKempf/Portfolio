{"version":3,"sources":["function.js"],"names":["pickEnglish","Array","pickGerman","document","getElementById","background","menuPhotography","menuProjects","updateSiteLanguage","fetch","NUMBER","code","response","then","UPPER","myJson","Object","transField","element","b64","siteLanguage","classList","charAt","len","arr","Arr","length","placeHolders","l","startsWith","userLang","L","push","v","pickLanguage","i","j","addEventListener","loop","strings","tmp","TYPED","Typed","decode","backDelay","typeSpeed","isFullscreen","num","extraBytes","fullscreenElement","temp","exitFullscreen","uint8","output","popUpSite","webkitExitFullscreen","mozRequestFullScreen","exports","9FoBSB","buffer","2","require","module","webkitRequestFullscreen","__argument2","__argument3","__filename","__dirname","Buffer","file","SlowBuffer","text","loadSubPage","_useTypedArrays","enterFullscreen"],"mappings":"mgBAMIA,WALJC,8CAMIC,EAAAA,IAAaC,WAASC,GADtBJ,EAAAA,IAAAA,WAAcG,GALlBE,EAAAA,IAAAF,WAAAC,GASIE,EAAAA,IAAkBH,WAASC,GAC3BG,EAAeJ,IAAAA,WAASC,iBAF5B,IAAIC,EAAAA,EAAAA,WAAaF,GACjB,OAAIG,IAAAA,SAEJ,wBAMAE,EAMEC,EAAMC,EAAA,GACEC,EAAcC,EAAd,GAAA,GACLC,EAAKC,EAACC,GACLC,EAAYD,EAJZP,EAAAA,EAAAA,GACES,EAAAA,EAAA,QADFT,EA8FFU,EAAAA,YAnGJ,SAAAC,qGAqBEC,IAAAA,EAAAA,EAAAA,OACApB,EAAYqB,MAAZF,EAAAG,OAAkBC,EAAlB,GAAA,EAAA,MAAAJ,EAAAG,OAAAC,EAAA,GAAA,EAAA,EAFFC,EAAA,IAAAC,EAAA,EAAAN,EAAAO,OAAA,EAAAC,GAQGC,EAAAC,EAAAC,EAAAX,EAAAO,OAAA,EAAAP,EAAAO,OAAA,IAAAK,EARH,EAYA,SAAAC,EAAAC,YAKCC,IAAAA,EAAAA,EAAAA,EAAAC,EAAAP,EAAAO,GAAA,EAAAC,GAAA,eADCF,EAAAA,EAAAA,EAAAA,OAAAA,KAAAA,GAAAA,EAAAA,EAAAA,OAAAA,EAAAA,KAAAA,GAAAA,EAAAA,EAAAA,OAAAA,EAAAA,KAAAA,EAAAA,EAAAA,EAAAA,OAAAA,EAAAA,WAKFhC,GAAWmC,MAAXnC,IAAWmC,GACTH,EAAAA,IAAAA,GAcAI,OAVAJ,IAAAA,EAMAK,EAAU,KALXC,EAFDC,EAAAC,EAAAA,OAAAA,KAAA,EAAAC,EAAAxB,EAAAG,OAAAa,EAAA,KAAA,IAAA,IAKAR,IAEEY,GADFK,EAAAA,EANAzB,EAAAG,OAAAa,KAAA,GAAAQ,EAAAxB,EAAAG,OAAAa,EAAA,KAAA,EAAAQ,EAAAxB,EAAAG,OAAAa,EAAA,KAAA,IAAA,EAAA,KAQEU,EAAAA,IAAAA,IAGAP,GA0CApB,EAAAA,0BAnCF,IAAM4B,EACJ3C,EAAAA,EADF4C,EACEC,EACWC,EAAAA,OAAAA,EAFPH,EAAAA,GACJ,SAGE3C,EAAAA,GAAAA,MAjFJ,mEAiFIA,OAAAA,iCAWJ+C,GAAMC,EAAAA,IAAiB,KAAjBA,EAAAA,EAAAA,IAAiB,GAAMC,EAAAjB,EAAA,GAC3BkB,MAhBFN,EAgBqBG,0CACjB/C,OAAAA,GACEA,KAFD2C,EAIC3C,GAAAA,GAHFA,EAAAA,EAEUA,EAAAA,OAAAA,KACRA,GACDmD,GAAMjC,EAAAA,GAAN,EAAkBkC,IACjBpD,GAAAA,KACDmD,MARL,KAAA,EAWEA,GAAAA,wCAAAA,uCAUEpC,OAAAA,SAEQsC,IAARtC,EAAQsC,KAAAA,SAAR,GAAAC,KAEAvC,KAAAA,KAAAA,EAAAA,UAAAA,oBAAAA,KAAAA,KAAAA,oBAAAA,OAAAA,OAAAA,GAAAA,EAAAA,UAAAA,OAAAA,UAAAA,GAAAA,UAAAA,GAAAA,UAAAA,GAAAA,UAAAA,GAAAA,oDAAAA,8CACD,CAAAwC,SAAA,EAAAC,OAAA,IAAAC,EAAA,CAAA,SAAAC,EAAAC,EAAAL,IACCvC,SAAAA,EAAAA,EAAQ6C,EAAR7C,EAAAmB,EAAA2B,EAAAC,EAAAC,EAAAC,igIAcF1D,EAAM2D,OAAOC,EACLZ,EAAAa,WAAuBC,EAAvBd,EAFJe,kBAAAA,GACJ/D,EAAAA,SAAa4D,KAORD,EARPK,gBAAA,WAUK,6BAMHC,EAAAA,IAAAA,WAAAA,GAAAA,OAHFF,EAAAA,IAAA,WAAA,OAAA,IAGEE,KAAAA,EAAAA,qCAIAF,MAAAA,GADFA,OAAAA,GAnBA","file":"function.min.js","sourcesContent":["/*jshint esversion: 9 */\r\n/* ########################################\r\n    ...\r\n*/\r\nimport Typed from 'typed.js';\n\nlet pickEnglish = document.getElementById(\"flagUK\");\nlet pickGerman = document.getElementById(\"flagDE\");\nlet popUpSite = document.getElementById(\"siteFullScreen\");\nlet background = document.getElementById(\"background\");\nlet menuPhotography = document.getElementById(\"menuPhotography\");\nlet menuProjects = document.getElementById(\"menuProjects\");\nlet menuResume = document.getElementById(\"menuResume\");\n\n\r\nlet userLang = navigator.language || navigator.userLanguage;\r\nlet siteLanguage = null;\r\n\r\n/**\r\n * Display the correct language which the user picked\r\n * @param  {[string]} lang [language code]\r\n * @return {[type]}      [null]\r\n */\r\nconst updateSiteLanguage = lang => {\r\n  fetch('./translations.json')\r\n    .then((response) => response.json())\r\n    .then((myJson) => {\r\n      Object.keys(myJson).forEach(textField => {\r\n        let transField = document.getElementById(textField);\r\n        if(transField != null) transField.innerHTML = myJson[textField][lang];\r\n      });\r\n  });\r\n};\r\n\r\n/**\r\n * Change the users language\r\n * @param  {[string]} lang [language code]\r\n */\r\nconst pickLanguage = lang => {\r\n  siteLanguage = lang;\r\n  if(lang === \"de\") {\r\n    pickEnglish.classList.remove(\"picked\");\r\n    pickGerman.classList.add(\"picked\");\r\n  } else {\r\n    pickGerman.classList.remove(\"picked\");\r\n    pickEnglish.classList.add(\"picked\");\r\n  }\r\n  updateSiteLanguage(lang);\r\n};\r\n\r\n//Set sitelanguage to language of user\r\nif(userLang.startsWith(\"de-\")) {\r\n  pickLanguage(\"de\");\r\n} else {\r\n  pickLanguage(\"en\");\r\n}\r\n\r\n\r\n//Right-top language symbols to change the global language\r\npickGerman.addEventListener(\"click\", e => {\r\n  pickLanguage(\"de\");\r\n});\r\n\r\npickEnglish.addEventListener(\"click\", e => {\r\n  pickLanguage(\"en\");\r\n});\r\n\r\n\r\n//Title animation Typed.js\r\nconst TYPED = new Typed('#typed', {\r\n  strings: ['CODER', 'WEB DEVELOPER'],\r\n  typeSpeed: 110,\r\n  backDelay: 3000,\r\n  backSpeed: 40,\r\n  loop: true\r\n});\r\n\r\n/**\r\n * Is fullscreen mode?\r\n * @return {[boolean]} [true = fullscreen, false = not fullscreen]\r\n */\r\nconst isFullscreen = () => {\r\n  if (\r\n    document.fullscreenElement || /* Standard syntax */\r\n    document.webkitFullscreenElement || /* Chrome, Safari and Opera syntax */\r\n    document.mozFullScreenElement ||/* Firefox syntax */\r\n    document.msFullscreenElement /* IE/Edge syntax */\r\n  ) { return true; }\r\n  return false;\r\n};\r\n\r\n\r\n/**\r\n * Leave fullscreen mode\r\n * @return {[type]} [null]\r\n */\r\nconst exitFullscreen = () => {\r\n  if(isFullscreen()) {\r\n    if(document.exitFullscreen) {\r\n      document.exitFullscreen();\r\n    } else if(document.mozCancelFullScreen) {\r\n      document.mozCancelFullScreen();\r\n    } else if(document.webkitExitFullscreen) {\r\n      document.webkitExitFullscreen();\r\n    }\r\n    popUpSite.classList.remove('big');\r\n  }\r\n  popUpSite.classList.remove(\"popUpSiteOpen\");\r\n};\r\n\r\n/**\r\n * Go into fullscreen mode\r\n * @param  {[DOMElement]} element Element to show in fullscreen\r\n * @return {[type]}         [null]\r\n */\r\nconst enterFullscreen = (element) => {\r\n  if(element.requestFullscreen) {\r\n    element.requestFullscreen();\r\n  } else if(element.mozRequestFullScreen) {\r\n    element.mozRequestFullScreen();\r\n  } else if(element.msRequestFullscreen) {\r\n    element.msRequestFullscreen();\r\n  } else if(element.webkitRequestFullscreen) {\r\n    element.webkitRequestFullscreen();\r\n  }\r\n  //Add exit page functionality\r\n  document.getElementById(\"close\").addEventListener(\"click\", () => {\r\n    exitFullscreen();\r\n  }, true);\r\n};\r\n\r\n/**\r\n * Load subpages and add close button and translate it to the current site language\r\n * @param  {[string]} file [Filename with filetype]\r\n * @return {[type]}      [null]\r\n */\r\nconst loadSubPage = file => {\r\n  fetch('./' + file)\r\n    .then((response) => response.text())\r\n    .then((subpage) => {\r\n      popUpSite.innerHTML = subpage;\r\n      popUpSite.classList.add(\"popUpSiteOpen\");\r\n      document.getElementById(\"close\").addEventListener(\"click\", () => {\r\n        exitFullscreen();\r\n      });\r\n      updateSiteLanguage(siteLanguage);\r\n    });\r\n};\r\n\r\nmenuPhotography.addEventListener(\"click\", () => {\r\n  popUpSite.classList.add('big');\r\n  loadSubPage(\"photography.html\");\r\n  enterFullscreen(document.body);\r\n});\r\n\r\nmenuProjects.addEventListener(\"click\", () => {\r\n  loadSubPage(\"projects.html\");\r\n});\r\n\r\nmenuResume.addEventListener(\"click\", () => {\r\n  loadSubPage(\"resume.html\");\r\n});\r\n"]}